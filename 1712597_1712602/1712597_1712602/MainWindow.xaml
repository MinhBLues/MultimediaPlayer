<Window x:Class="_1712597_1712602.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:local="clr-namespace:_1712597_1712602"
        mc:Ignorable="d"
        TextElement.FontFamily="Roboto"
        TextElement.FontSize="12"
        Loaded="Window_Loaded"
        Title="MM Music" Height="530" Width="900" WindowStartupLocation="CenterScreen"  Foreground="LightSteelBlue">

    <materialDesign:Card VerticalAlignment ="Stretch" UniformCornerRadius="0">
        <Grid RenderTransformOrigin="0.5,0.5">

            <materialDesign:Card UniformCornerRadius="0" Width="350" Height="300"  VerticalAlignment="Top" HorizontalAlignment="Left" Background="#FFDCD9C8">
                <Grid Margin="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="9*"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    
                    <StackPanel Grid.Row="0" Orientation="Vertical" VerticalAlignment ="Center" >
                        <Image Height="300" Source="logo.png" Margin="0,50,0,0" RenderOptions.BitmapScalingMode="HighQuality" ></Image>
                    </StackPanel>
                    <StackPanel Grid.Row="1" Orientation="Horizontal" Width="300" HorizontalAlignment="Center" Margin="0,15,0,0" >
                        <TextBlock Foreground="Black" Name="timeStart" VerticalAlignment="Center" >00:00</TextBlock>
                        <TextBlock Foreground="Black" Name="timeEnd" VerticalAlignment="Center" Margin="240,0,0,0" HorizontalAlignment="Right">00:00</TextBlock>
                    </StackPanel>
                    <Slider Name="sTimerMusic" Margin="15,0,15,0" Width="300" VerticalAlignment="Bottom"  Grid.Row="2" TickFrequency="5"  Orientation="Horizontal" Minimum="0"  Value="0" Foreground="#FFED7945" MouseMove="MouseMove" 
                    PreviewMouseLeftButtonDown="MouseDown"
                    PreviewMouseLeftButtonUp="MouseUp" />
                </Grid>
            </materialDesign:Card>
         
            <materialDesign:Card UniformCornerRadius="0" Width="350" Height="200"  VerticalAlignment="Bottom" HorizontalAlignment="Left" Background="White">
                <Grid Margin="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="3*"></RowDefinition>
                        <RowDefinition Height="5*"></RowDefinition>
                        <RowDefinition Height="2*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Orientation="Horizontal" Width="350" HorizontalAlignment="Center">
                        <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" ToolTip="Resource name: MaterialDesignRaisedLightButton" BorderBrush="{x:Null}" Background="{x:Null}" BorderThickness="0" Width="30" Height="30" HorizontalAlignment="Right" Margin="40,0,20,0" Click="Loop_Click">
                            <materialDesign:PackIcon Name="piRepeat" Kind="Repeat" Width="30" Height="30" VerticalAlignment="Center" Foreground="Gray"/>
                        </Button>
                        <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" BorderBrush="{x:Null}" Background="{x:Null}" BorderThickness="0" Width="36" Height="36" Click="BackSong_Click" >
                            <materialDesign:PackIcon Kind="SkipPrevious" Width="30" Height="30" VerticalAlignment="Center" Foreground="Black"/>
                        </Button>
                        <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"  Width="56" Height="56" BorderBrush="{x:Null}" Background="{x:Null}"  BorderThickness="0" Margin="15,0" Click="PlayMusic_Click">
                            <materialDesign:PackIcon Name="piPlay"  Kind="PlayCircleOutline"  Width="56" Height="56"  Foreground="Black"/>
                        </Button>
                        <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" BorderBrush="{x:Null}" Background="{x:Null}"  Width="36" Height="36" HorizontalAlignment="Left" VerticalAlignment="Center" Click="NextSong_Click">
                            <materialDesign:PackIcon Kind="SkipNext" Width="30" Height="30" VerticalAlignment="Center" Foreground="Black"/>
                        </Button>
                        <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" BorderBrush="{x:Null}" Background="{x:Null}" BorderThickness="0" Width="36" Height="36" HorizontalAlignment="Right" Margin="20,0,0,0" Click="Shuffle_Click">
                            <materialDesign:PackIcon  Name="piShuffle" Kind="ShuffleDisabled" Width="30" Height="30" VerticalAlignment="Center" Foreground="Gray"/>
                        </Button>
                    </StackPanel>
                    <StackPanel Grid.Row="1" Margin="10,20,10,10">
                        <TextBlock Name="txbNameArtist"  FontSize="20" FontFamily="Roboto" Foreground="Black" HorizontalAlignment="Center"/>
                        <TextBlock Name="txbSongTitle"  FontSize="30" FontFamily="Roboto" Foreground="Black" HorizontalAlignment="Center">MMM</TextBlock>
                    </StackPanel>
                    <StackPanel Grid.Row="2" Orientation="Horizontal"  Margin="10,0,0,0"  >
                        <materialDesign:PackIcon Name="piVol" Kind="Audio" Width="20" Height="20" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="#FF0E0F0F" />
                        <Slider Name="vol" Margin="15,0,15,10" VerticalAlignment="Bottom"  Grid.Row="2" TickFrequency="5" Width="240" Orientation="Horizontal" Minimum="0"  Maximum="1" Value="0.5" Foreground="#FFED7945" ValueChanged="volumeChange"  />
                        <TextBlock Name="txbVol" HorizontalAlignment="Right" VerticalAlignment="Center" Foreground="Black" FontFamily="roboto" >50</TextBlock>                 
                    </StackPanel>
                </Grid>
            </materialDesign:Card>

            <materialDesign:Card UniformCornerRadius="0" Width="550" Height="150" Margin="0,0,0,0" VerticalAlignment="Top" HorizontalAlignment="Right" Background="#1E3D59">
                <Grid Margin="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="2.5*"/>
                        <RowDefinition Height="5*"/>
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Orientation="Horizontal" Width="500" HorizontalAlignment="Center">
                        <materialDesign:PopupBox Style="{StaticResource MaterialDesignMultiFloatingActionAccentPopupBox}" Foreground="White" PlacementMode="RightAndAlignMiddles" ToggleCheckedContentCommandParameter="wowsers" Width="40" Height="40" Background="#408ec6" >
                            <materialDesign:PopupBox.ToggleCheckedContent>
                                <materialDesign:PackIcon  Kind="Buffer" Width="25"  Height="25" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </materialDesign:PopupBox.ToggleCheckedContent>
                            <StackPanel Orientation="Horizontal">
                                <Button ToolTip="Add PlayList" Click="addPlayList">
                                    <materialDesign:PackIcon Kind="PlaylistAdd" Width="25" Height="25" VerticalAlignment="Center" Foreground="Black" HorizontalAlignment="Center" />
                                </Button>
                                <Button ToolTip="Load PlayList"  Click="Load_Click">
                                    <materialDesign:PackIcon Kind="Album" Width="25" Height="25" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="Black" />
                                </Button>
                                <materialDesign:DialogHost DialogClosing="Sample1_DialogHost_OnDialogClosing" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <materialDesign:DialogHost.DialogContent>

                                        <StackPanel Margin="16">

                                            <TextBlock>Add a new playlist.</TextBlock>

                                            <TextBox Margin="0 8 0 0" HorizontalAlignment="Stretch" Name="txbNewName" />
                                            <StackPanel Name="ManyCheckBoxes" Orientation="Horizontal" HorizontalAlignment="Right" >
                                                <CheckBox Checked="Check_Click" Margin="0,0,10,0" Name="checkTxt" Content=".txt" IsChecked="True" Style="{StaticResource MaterialDesignCheckBox}"/>
                                                <CheckBox Checked="Check_Click" Name="checkXml" Content=".xml" Style="{StaticResource MaterialDesignCheckBox}"/>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" >

                                                <Button Style="{StaticResource MaterialDesignFlatButton}" Content="ACCEPT"  IsDefault="True" Margin="0 8 8 0" Command="materialDesign:DialogHost.CloseDialogCommand" Click="Accept_Click"/>

                                                <Button Style="{StaticResource MaterialDesignFlatButton}"  Content="CANCEL" IsCancel="True"  Margin="0 8 8 0" Command="materialDesign:DialogHost.CloseDialogCommand"/>

                                            </StackPanel>

                                        </StackPanel>

                                    </materialDesign:DialogHost.DialogContent>
                                    <Button ToolTip="Save PlayList" Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}" >
                                        <materialDesign:PackIcon  Kind="PlaylistCheck" Width="25" Height="25" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="Black" />
                                    </Button>
                                </materialDesign:DialogHost>
                                <Button ToolTip="Load WishList" Click="LoadWishList_Click">
                                    <materialDesign:PackIcon Kind="Heart" Width="25" Height="25" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#ca1f7b" />
                                </Button>
                            </StackPanel>
                        </materialDesign:PopupBox>
                    </StackPanel>
                    <StackPanel Grid.Row="1" Margin="0" Orientation="Horizontal">
                        <TextBlock Margin="50,0,0,0" Width="60" HorizontalAlignment="Center" VerticalAlignment="Bottom" Foreground="#f5f0e1" Name="txbQuatitySong">0 Song /</TextBlock>
                        <TextBlock Width="50" HorizontalAlignment="Center" VerticalAlignment="Bottom" Foreground="#f5f0e1" Name="txbTotalTime">00:00</TextBlock>
                        <Image Margin="15,0,0,0" Width="200" Height="100" Source="LogoT.png" HorizontalAlignment="Center" VerticalAlignment="Center" RenderOptions.BitmapScalingMode="HighQuality"/>
                    </StackPanel>
                </Grid>
            </materialDesign:Card>

            <materialDesign:Card UniformCornerRadius="0" Width="550" Height="320" Margin="0,0,0,30" VerticalAlignment="Bottom" HorizontalAlignment="Right" Background="#408ec6">
                <DataGrid HorizontalScrollBarVisibility = "Disabled" Name="dgListSong" Margin="0 8 0 0" ItemsSource="{Binding Playlists, RelativeSource={RelativeSource Mode =FindAncestor,AncestorType=Window},Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" CanUserSortColumns="True" CanUserAddRows="False" AutoGenerateColumns="False"

                          materialDesign:DataGridAssist.CellPadding="13 8 8 8" materialDesign:DataGridAssist.ColumnHeaderPadding="8" PreviewMouseLeftButtonUp="MouseUp_DataGrid" >

                    <DataGrid.Columns>

                        <materialDesign:DataGridTextColumn Binding="{Binding Number}"   Header="#" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" >

                            <DataGridTextColumn.HeaderStyle>

                                <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">

                                    <Setter Property="HorizontalAlignment" Value="Center" />

                                    <Setter Property="ContentTemplate">

                                        <Setter.Value>

                                            <DataTemplate>

                                                <TextBlock TextWrapping="Wrap" Text="{Binding}" TextAlignment="Left"/>

                                            </DataTemplate>

                                        </Setter.Value>

                                    </Setter>

                                </Style>

                            </DataGridTextColumn.HeaderStyle>

                            <DataGridTextColumn.ElementStyle>

                                <Style TargetType="{x:Type TextBlock}">

                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>

                            </DataGridTextColumn.ElementStyle>
                         
                        </materialDesign:DataGridTextColumn>

                        <DataGridTemplateColumn >
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button  Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" BorderBrush="{x:Null}"  Width="25" Height="25" Background="{x:Null}" Click="playSingleMusic"  >
                                        <materialDesign:PackIcon   Kind="{Binding IconSong.Kind }"  Width="20" Height="20" Foreground="Black"/>
                                    </Button>
                                </DataTemplate>
                               
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellStyle>

                                <Style TargetType="DataGridCell">

                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Foreground" Value="#FF424242"/>

                                </Style>
                            </DataGridTemplateColumn.CellStyle>
                        </DataGridTemplateColumn>

                        <materialDesign:DataGridTextColumn Binding="{Binding Title}"  Width="130" Header="Title" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" >

                            <DataGridTextColumn.HeaderStyle>

                                <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">

                                    <Setter Property="HorizontalAlignment" Value="Stretch" />

                                    <Setter Property="ContentTemplate">

                                        <Setter.Value>

                                            <DataTemplate>

                                                <TextBlock TextWrapping="Wrap" Text="{Binding}" TextAlignment="Left"/>

                                            </DataTemplate>

                                        </Setter.Value>

                                    </Setter>

                                </Style>

                            </DataGridTextColumn.HeaderStyle>

                            <DataGridTextColumn.ElementStyle>

                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>

                            </DataGridTextColumn.ElementStyle>
                        </materialDesign:DataGridTextColumn>
                        <!-- if you want to use the pop up style (MaterialDesignDataGridTextColumnPopupEditingStyle), you must use MaterialDataGridTextColumn -->

                        <materialDesign:DataGridTextColumn Binding="{Binding Artist}" Width="100" Header="Artist" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" >

                            <DataGridTextColumn.HeaderStyle>

                                <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">

                                    <Setter Property="HorizontalAlignment" Value="Left" />

                                    <Setter Property="ContentTemplate">

                                        <Setter.Value>

                                            <DataTemplate>

                                                <TextBlock TextWrapping="Wrap" Text="{Binding}" TextAlignment="Left"/>

                                            </DataTemplate>

                                        </Setter.Value>

                                    </Setter>

                                </Style>

                            </DataGridTextColumn.HeaderStyle>

                            <DataGridTextColumn.ElementStyle>

                                <Style TargetType="{x:Type TextBlock}">

                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>

                            </DataGridTextColumn.ElementStyle>

                        </materialDesign:DataGridTextColumn>

                        <!-- set a max length to get an indicator in the editor -->

                        <materialDesign:DataGridTextColumn Binding="{Binding Album}" Header="Album" MaxLength="255" Width="100" EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}">

                            <DataGridTextColumn.HeaderStyle>

                                <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">

                                    <Setter Property="HorizontalAlignment" Value="Left" />

                                    <Setter Property="ContentTemplate">

                                        <Setter.Value>

                                            <DataTemplate>

                                                <TextBlock TextWrapping="Wrap" Text="{Binding}" TextAlignment="Left"/>

                                            </DataTemplate>

                                        </Setter.Value>

                                    </Setter>

                                </Style>

                            </DataGridTextColumn.HeaderStyle>

                            <DataGridTextColumn.ElementStyle>

                                <Style TargetType="{x:Type TextBlock}">

                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>

                            </DataGridTextColumn.ElementStyle>

                        </materialDesign:DataGridTextColumn>

                        <materialDesign:DataGridTextColumn Binding="{Binding Time}" Header="Time" Width="70"  EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}">

                            <DataGridTextColumn.HeaderStyle>

                                <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">

                                    <Setter Property="HorizontalAlignment" Value="Stretch" />

                                    <Setter Property="ContentTemplate">

                                        <Setter.Value>

                                            <DataTemplate>

                                                <TextBlock TextWrapping="Wrap" Text="{Binding}" TextAlignment="Center"/>

                                            </DataTemplate>

                                        </Setter.Value>

                                    </Setter>

                                </Style>

                            </DataGridTextColumn.HeaderStyle>

                            <DataGridTextColumn.ElementStyle>

                                <Style TargetType="{x:Type TextBlock}">

                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>

                            </DataGridTextColumn.ElementStyle>

                        </materialDesign:DataGridTextColumn>
                        <!-- use custom combo box column to get better combos. Use ItemsSourceBinding as your binding template to be applied to each combo -->
                        <DataGridTemplateColumn  Header="Favorite">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                  <!--  <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" BorderBrush="{x:Null}"  Width="30" Height="20" Background="{x:Null}"  HorizontalAlignment="Center" >
                                        <materialDesign:PackIcon Kind="HeartOutline" Width="20" Height="20" Foreground="Black"/>
                                    </Button>-->
                                    <ToggleButton Style="{StaticResource MaterialDesignFlatPrimaryToggleButton}" ToolTip="MaterialDesignFlatPrimaryToggleButton"  IsChecked ="{Binding IsFav}" Unchecked="UnWish_Click" Checked="Wish_Click">
                                        <materialDesign:PackIcon Kind="HeartOutline" Height="21" Width="21" />
                                    </ToggleButton>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            <DataGridTemplateColumn.CellStyle>

                                <Style TargetType="DataGridCell">
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Foreground" Value="#FF424242"/>
                                </Style>
                            </DataGridTemplateColumn.CellStyle>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>

                </DataGrid>
            </materialDesign:Card>
           
            <materialDesign:Card UniformCornerRadius="0"   Width="550" Height="30" VerticalAlignment="Bottom" HorizontalAlignment="Right" Background="#408ec6">
                <Button Name="btnDelete" Margin="0,0,10,0" Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" BorderBrush="{x:Null}" Background="{x:Null}" BorderThickness="0" Width="30" Height="30" HorizontalAlignment="Right" Click="Delete_Click">
                    <materialDesign:PackIcon Kind="DeleteForever" Width="30" Height="30" VerticalAlignment="Center" Background="#408ec6" Foreground="White"/>
                </Button>
            </materialDesign:Card>
        </Grid>
    </materialDesign:Card>
</Window>
